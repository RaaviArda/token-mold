{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/dict lazy ^\\.\\/.*\\.json$ namespace object","webpack:///./src/scripts/index.js","webpack:///./src/scripts/overlay.js","webpack:///./src/scripts/sticky-templates.js","webpack:///./src/scripts/token-mold.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","installedModules","__webpack_require__","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","s","map","webpackAsyncContext","req","then","code","ids","id","keys","Hooks","on","game","async","user","isGM","title","moduleVersion","version","settings","register","default","String","scope","oldVersion","isNewerVersion","TokenMoldOverlay","BasePlaceableHUD","options","super","defaultOptions","classes","concat","template","getData","stats","this","attrs","ret","icon","path","getProperty","actor","filter","position","width","w","height","h","left","x","top","y","canvas","grid","size","element","css","initStickyTemplates","app","html","submitBtn","find","selectedTokenId","el","tokens","ownedTokens","join","before","scene","parentId","uData","oldTId","newTId","templateId","token","templates","duplicate","idx","indexOf","splice","update","_id","templateIds","newX","newY","dx","dy","alpha","rotation","newAlpha","dAlpha","forEach","getEmbeddedEntity","tokenCenter","center","dAlphaR","toRadians","Math","cos","sin","direction","updateEmbeddedEntity","tokenId","placeables","entity","setProperty","TokenMold","counter","_rollTableList","dict","initHooks","_hookActorDirectory","registerSettings","loadSettings","systemSupported","exec","system","append","hud","hovered","permission","CONST","ENTITY_PERMISSIONS","OBSERVER","overlay","use","clear","args","_hookPreTokenCreate","barAttributes","_getBarAttributes","_loadDicts","_getRolltables","_loadTable","replace","languages","lang","fromUuid","prefix","table","defaultSettings","adjectives","rollTablePacks","packs","tables","uuid","pack","getIndex","metadata","label","tableString","collection","debug","section","classList","add","dirHeader","querySelector","parentNode","insertBefore","_renderActorDirectoryMenu","insertAdjacentHTML","hp","config","inputs","querySelectorAll","checkbox","addEventListener","ev","checked","saveSettings","_refreshSelected","form","TokenMoldForm","render","userId","_setTokenData","actors","actorId","_setCreatureSize","actorLink","unlinkedOnly","_modifyName","_rollHP","_overwriteConfig","selected","controlledTokens","udata","mergeObject","entries","min","max","val","floor","random","attribute","Boolean","round","formula","attributes","Roll","roll","toChat","toMessage","rollMode","flavor","total","ui","notifications","warn","sceneId","number","sameTokens","scenes","tmp","split","pop","suffix","parseInt","_dealphabetize","toString","_deromanize","isNaN","range","ceil","_alphabetize","_romanize","_pickNewName","results","text","items","vals","values","sum","reduce","accum","elem","rand","txt","fromCase","toCase","res","loc","toLowerCase","minNameLen","maxNameLen","nameLength","newName","_chooseWeighted","beg","ltrs","b","c1","c2","c3","end","mid","_chgCase","upper","lower","num","letterStyle","startValue","char","charCodeAt","fromCharCode","digits","roman","Array","rom","str","toUpperCase","M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I","test","tSize","tiny","sm","med","lg","huge","grg","traits","gridUnits","gridDistance","scale","int","hint","onChange","_updateCheckboxes","log","remove","vision","displayBars","bar1","bar2","displayName","disposition","defaultAttrs","dndOptions","dndDefaultNameOptions","set","model","Actor","TokenConfig","getTrackedAttributes","newAttributes","getTrackedAttributeChoices","attr","includes","FormApplication","resizable","closeOnSubmit","submitOnClose","submitOnChange","tabs","navSelector","contentSelector","initial","btns","_getHeaderButtons","attrGroups","$","each","langGroup","_onSubmit","formData","_resetOptions","ar","alu","ro","actorAttributes","_actorAttributes","displayModes","TOKEN_DISPLAY_MODES","dispositions","TOKEN_DISPOSITIONS","defaultIcons","showHP","showSystem","rollTableList","activateListeners","addBtn","clone","prev","container","currentTarget","closest","next","getElementsByClassName","innerHTML","nameRandomizer","style","display","change","children","langSelection","parentContainer","resetBtn","updateManyEmbeddedEntities","getEmbeddedCollection","notify","getAttributes","parent","valid","k","v","groups","group","sortFun","a","skill","skills","sort"],"mappings":"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aA,EAAWG,QACxB,IAAI,IAAIlF,EAAI,EAAGA,EAAI+E,EAAW7E,OAAQF,IAAKN,EAAqBqF,EAAW/E,IAC3E,IAAIU,EAAsBuE,EAInBpE,EAAoBA,EAAoBsE,EAAI,0B;;;;8CCrMrD,IAAIC,EAAM,CACT,mBAAoB,CACnB,oCACA,kBAED,kBAAmB,CAClB,mCACA,iBAED,kBAAmB,CAClB,mCACA,iBAED,eAAgB,CACf,gCACA,cAED,kBAAmB,CAClB,mCACA,iBAED,eAAgB,CACf,gCACA,cAED,gBAAiB,CAChB,iCACA,eAED,eAAgB,CACf,gCACA,cAED,iBAAkB,CACjB,kCACA,gBAED,kBAAmB,CAClB,mCACA,iBAED,iBAAkB,CACjB,kCACA,gBAED,gBAAiB,CAChB,iCACA,eAED,kBAAmB,CAClB,mCACA,iBAED,gBAAiB,CAChB,iCACA,eAED,eAAgB,CACf,gCACA,cAED,mBAAoB,CACnB,oCACA,kBAED,mBAAoB,CACnB,oCACA,kBAED,oBAAqB,CACpB,qCACA,mBAED,eAAgB,CACf,gCACA,cAED,iBAAkB,CACjB,kCACA,gBAED,iBAAkB,CACjB,kCACA,gBAED,oBAAqB,CACpB,qCACA,mBAED,mBAAoB,CACnB,oCACA,kBAED,gBAAiB,CAChB,iCACA,eAED,oBAAqB,CACpB,qCACA,mBAED,kBAAmB,CAClB,mCACA,iBAED,iBAAkB,CACjB,kCACA,gBAED,kBAAmB,CAClB,mCACA,iBAED,gBAAiB,CAChB,iCACA,eAED,mBAAoB,CACnB,oCACA,kBAED,iBAAkB,CACjB,kCACA,gBAED,iBAAkB,CACjB,kCACA,gBAED,iBAAkB,CACjB,kCACA,gBAED,eAAgB,CACf,gCACA,cAED,cAAe,CACd,+BACA,cAGF,SAASC,EAAoBC,GAC5B,IAAIzE,EAAoB6C,EAAE0B,EAAKE,GAC9B,OAAOjE,QAAQC,UAAUiE,MAAK,WAC7B,IAAItE,EAAI,IAAImB,MAAM,uBAAyBkD,EAAM,KAEjD,MADArE,EAAEuE,KAAO,mBACHvE,KAIR,IAAIwE,EAAML,EAAIE,GAAMI,EAAKD,EAAI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","file":"index.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"bundles/\" + ({\"afrikaans-json\":\"afrikaans-json\",\"albanian-json\":\"albanian-json\",\"armenian-json\":\"armenian-json\",\"azeri-json\":\"azeri-json\",\"croatian-json\":\"croatian-json\",\"czech-json\":\"czech-json\",\"danish-json\":\"danish-json\",\"dutch-json\":\"dutch-json\",\"english-json\":\"english-json\",\"estonian-json\":\"estonian-json\",\"finnish-json\":\"finnish-json\",\"french-json\":\"french-json\",\"georgian-json\":\"georgian-json\",\"german-json\":\"german-json\",\"greek-json\":\"greek-json\",\"hungarian-json\":\"hungarian-json\",\"icelandic-json\":\"icelandic-json\",\"indonesian-json\":\"indonesian-json\",\"irish-json\":\"irish-json\",\"italian-json\":\"italian-json\",\"latvian-json\":\"latvian-json\",\"lithuanian-json\":\"lithuanian-json\",\"norwegian-json\":\"norwegian-json\",\"polish-json\":\"polish-json\",\"portuguese-json\":\"portuguese-json\",\"romanian-json\":\"romanian-json\",\"russian-json\":\"russian-json\",\"sicilian-json\":\"sicilian-json\",\"slovak-json\":\"slovak-json\",\"slovenian-json\":\"slovenian-json\",\"spanish-json\":\"spanish-json\",\"swedish-json\":\"swedish-json\",\"turkish-json\":\"turkish-json\",\"welcome-screen\":\"welcome-screen\",\"welsh-json\":\"welsh-json\",\"zulu-json\":\"zulu-json\"}[chunkId]||chunkId) + \".\" + {\"afrikaans-json\":\"17a5\",\"albanian-json\":\"eb8c\",\"armenian-json\":\"70ec\",\"azeri-json\":\"0d67\",\"croatian-json\":\"2be5\",\"czech-json\":\"aaa8\",\"danish-json\":\"61ef\",\"dutch-json\":\"3fdd\",\"english-json\":\"b4c8\",\"estonian-json\":\"9a50\",\"finnish-json\":\"9cec\",\"french-json\":\"e472\",\"georgian-json\":\"7a65\",\"german-json\":\"2000\",\"greek-json\":\"0079\",\"hungarian-json\":\"40e2\",\"icelandic-json\":\"5fc0\",\"indonesian-json\":\"00f9\",\"irish-json\":\"3686\",\"italian-json\":\"4264\",\"latvian-json\":\"a498\",\"lithuanian-json\":\"5906\",\"norwegian-json\":\"2c33\",\"polish-json\":\"825c\",\"portuguese-json\":\"0f7f\",\"romanian-json\":\"beaf\",\"russian-json\":\"7503\",\"sicilian-json\":\"2567\",\"slovak-json\":\"1d9a\",\"slovenian-json\":\"5e75\",\"spanish-json\":\"9bed\",\"swedish-json\":\"b026\",\"turkish-json\":\"f187\",\"welcome-screen\":\"6377\",\"welsh-json\":\"f804\",\"zulu-json\":\"a5c2\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"modules/token-mold/scripts/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/scripts/index.js\");\n","var map = {\n\t\"./afrikaans.json\": [\n\t\t\"./src/scripts/dict/afrikaans.json\",\n\t\t\"afrikaans-json\"\n\t],\n\t\"./albanian.json\": [\n\t\t\"./src/scripts/dict/albanian.json\",\n\t\t\"albanian-json\"\n\t],\n\t\"./armenian.json\": [\n\t\t\"./src/scripts/dict/armenian.json\",\n\t\t\"armenian-json\"\n\t],\n\t\"./azeri.json\": [\n\t\t\"./src/scripts/dict/azeri.json\",\n\t\t\"azeri-json\"\n\t],\n\t\"./croatian.json\": [\n\t\t\"./src/scripts/dict/croatian.json\",\n\t\t\"croatian-json\"\n\t],\n\t\"./czech.json\": [\n\t\t\"./src/scripts/dict/czech.json\",\n\t\t\"czech-json\"\n\t],\n\t\"./danish.json\": [\n\t\t\"./src/scripts/dict/danish.json\",\n\t\t\"danish-json\"\n\t],\n\t\"./dutch.json\": [\n\t\t\"./src/scripts/dict/dutch.json\",\n\t\t\"dutch-json\"\n\t],\n\t\"./english.json\": [\n\t\t\"./src/scripts/dict/english.json\",\n\t\t\"english-json\"\n\t],\n\t\"./estonian.json\": [\n\t\t\"./src/scripts/dict/estonian.json\",\n\t\t\"estonian-json\"\n\t],\n\t\"./finnish.json\": [\n\t\t\"./src/scripts/dict/finnish.json\",\n\t\t\"finnish-json\"\n\t],\n\t\"./french.json\": [\n\t\t\"./src/scripts/dict/french.json\",\n\t\t\"french-json\"\n\t],\n\t\"./georgian.json\": [\n\t\t\"./src/scripts/dict/georgian.json\",\n\t\t\"georgian-json\"\n\t],\n\t\"./german.json\": [\n\t\t\"./src/scripts/dict/german.json\",\n\t\t\"german-json\"\n\t],\n\t\"./greek.json\": [\n\t\t\"./src/scripts/dict/greek.json\",\n\t\t\"greek-json\"\n\t],\n\t\"./hungarian.json\": [\n\t\t\"./src/scripts/dict/hungarian.json\",\n\t\t\"hungarian-json\"\n\t],\n\t\"./icelandic.json\": [\n\t\t\"./src/scripts/dict/icelandic.json\",\n\t\t\"icelandic-json\"\n\t],\n\t\"./indonesian.json\": [\n\t\t\"./src/scripts/dict/indonesian.json\",\n\t\t\"indonesian-json\"\n\t],\n\t\"./irish.json\": [\n\t\t\"./src/scripts/dict/irish.json\",\n\t\t\"irish-json\"\n\t],\n\t\"./italian.json\": [\n\t\t\"./src/scripts/dict/italian.json\",\n\t\t\"italian-json\"\n\t],\n\t\"./latvian.json\": [\n\t\t\"./src/scripts/dict/latvian.json\",\n\t\t\"latvian-json\"\n\t],\n\t\"./lithuanian.json\": [\n\t\t\"./src/scripts/dict/lithuanian.json\",\n\t\t\"lithuanian-json\"\n\t],\n\t\"./norwegian.json\": [\n\t\t\"./src/scripts/dict/norwegian.json\",\n\t\t\"norwegian-json\"\n\t],\n\t\"./polish.json\": [\n\t\t\"./src/scripts/dict/polish.json\",\n\t\t\"polish-json\"\n\t],\n\t\"./portuguese.json\": [\n\t\t\"./src/scripts/dict/portuguese.json\",\n\t\t\"portuguese-json\"\n\t],\n\t\"./romanian.json\": [\n\t\t\"./src/scripts/dict/romanian.json\",\n\t\t\"romanian-json\"\n\t],\n\t\"./russian.json\": [\n\t\t\"./src/scripts/dict/russian.json\",\n\t\t\"russian-json\"\n\t],\n\t\"./sicilian.json\": [\n\t\t\"./src/scripts/dict/sicilian.json\",\n\t\t\"sicilian-json\"\n\t],\n\t\"./slovak.json\": [\n\t\t\"./src/scripts/dict/slovak.json\",\n\t\t\"slovak-json\"\n\t],\n\t\"./slovenian.json\": [\n\t\t\"./src/scripts/dict/slovenian.json\",\n\t\t\"slovenian-json\"\n\t],\n\t\"./spanish.json\": [\n\t\t\"./src/scripts/dict/spanish.json\",\n\t\t\"spanish-json\"\n\t],\n\t\"./swedish.json\": [\n\t\t\"./src/scripts/dict/swedish.json\",\n\t\t\"swedish-json\"\n\t],\n\t\"./turkish.json\": [\n\t\t\"./src/scripts/dict/turkish.json\",\n\t\t\"turkish-json\"\n\t],\n\t\"./welsh.json\": [\n\t\t\"./src/scripts/dict/welsh.json\",\n\t\t\"welsh-json\"\n\t],\n\t\"./zulu.json\": [\n\t\t\"./src/scripts/dict/zulu.json\",\n\t\t\"zulu-json\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/scripts/dict lazy recursive ^\\\\.\\\\/.*\\\\.json$\";\nmodule.exports = webpackAsyncContext;","import TokenMold from './token-mold.js';\n\nHooks.on('init', () => {\n\tgame[\"token-mold\"] = new TokenMold();\n});\n\nHooks.on('ready', async () => {\n\t// Only show welcome screen to gms\n\tif (!game.user.isGM)\n\t\treturn;\n\t// Edit next line to match module.\n\tconst module = game.modules.get(\"token-mold\");\n\tconst title = module.data.title;\n\tconst moduleVersion = module.data.version;\n\tgame.settings.register(title, 'version', {\n\t\tname: `${title} Version`,\n\t\tdefault: \"0.0.0\",\n\t\ttype: String,\n\t\tscope: 'world',\n\t});\n\tconst oldVersion = game.settings.get(title, \"version\");\n\n\tif (!isNewerVersion(moduleVersion, oldVersion))\n\t\treturn;\n\n\t(await import(\n\t\t\t\t\t\t\t\t/* webpackChunkName: \"welcome-screen\" */\n\t\t\t\t\t\t\t\t'./welcome-screen.js'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t).default();\n})","export class TokenMoldOverlay extends BasePlaceableHUD {\n\n\tstatic get defaultOptions() {\n\t\tconst options = super.defaultOptions;\n\t\toptions.classes = options.classes.concat([\"token-mold-overlay\"]);\n\t\toptions.template = \"modules/token-mold/templates/overlay.html\";\n\t\toptions.id = \"token-mold-overlay\";\n\t\treturn options;\n\t}\n\n\tgetData() {\n\t\tconst data = super.getData();\n\t\t// get properties and filter if property was not found\n\t\tdata.stats = this.attrs.map(e => {\n\t\t\tconst ret =  {\n\t\t\t\ticon: e.icon,\n\t\t\t\tpath: e.path,\n\t\t\t\tvalue: getProperty(this.object.actor.data, e.path)\n\t\t\t};\n\t\t\tif (ret.value === \"\"  || ret.value === null || ret.value === undefined)\n\t\t\t\treturn null;\n\t\t\treturn ret;\n\t\t}).filter(e => e !== null);\n\t\treturn data;\n\t}\n\n\tsetPosition() {\n\n\t  const position = {\n\t    width: this.object.w,\n      height: this.object.h,\n      left: this.object.x,\n\t\t\ttop: this.object.y,\n\t\t\t\"font-size\": canvas.grid.size / 5 + \"px\"\n    };\n\t\tthis.element.css(position);\n  }\n}\n","export const initStickyTemplates = function() {\n\t// Call all hooks on ready to be able to check if user isTrusted or not\n\tHooks.on('ready', () => {\n\t\t// // Don't allow for non trusted users\n\t\t// if (!game.user.isTrusted) return;\n\t\t// Removed.. since it doesn#t matter. The user will only be able to use templates as long as they're allowed to..\n\n\t\t// Add sticky template options to MeasureTemplateConfig\n\t\tHooks.on('renderMeasuredTemplateConfig', (app, html, data) => {\n\t\t\tconst submitBtn = html.find('button[type=\"submit\"]');\n\t\t\tconst selectedTokenId = getProperty(data, 'object.flags.token-mold.sticky-templates.tokenId') || -1;\n\t\t\t\n\t\t\t// Only allow controlled tokens\n\t\t\tconst el = `\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Stick to Token </label>\n\t\t\t\t<select name=\"flags.token-mold.sticky-templates.tokenId\" data-dtype=\"String\">\n\t\t\t\t\t<option value=\"-1\" ${selectedTokenId < 0 ? `selected` : ``}>None</option>\n\t\t\t\t\t\t${canvas.tokens.ownedTokens.map(e =>`<option value=\"${e.id}\" ${e.id === selectedTokenId ? `selected` : ``}>${e.name}</option>`).join(``)}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t${data.object.t === \"rect\" ? '' : `\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>Rotate with sticked token?</label>\n\t\t\t\t<input type=\"checkbox\" name=\"flags.token-mold.sticky-templates.rotate\" data-dtype=\"Boolean\" ${getProperty(data.object, \"flags.token-mold.sticky-templates.rotate\") === true ? 'checked': ''}/>\n\t\t\t</div>`}\n\t\t\t`\n\t\t\tsubmitBtn.before(el);\n\t\t})\n\t\t\n\t\t// When updating a measuredTemplate and sticking it to a new token, remove template from old token and add to new.\n\t\tHooks.on('preUpdateMeasuredTemplate', (scene, parentId, uData, data) => {\n\t\t\tconst oldTId = getProperty(data, \"currentData.flags.token-mold.sticky-templates.tokenId\"),\n\t\t\t\t\t\tnewTId = getProperty(uData, \"flags.token-mold.sticky-templates.tokenId\"),\n\t\t\t\t\t\ttemplateId = uData.id;\n\t\t\t\n\t\t\t// If attached TokenId hasn't changed or isn't defined do nothing\n\t\t\tif (oldTId === newTId || newTId === -2) return;\n\t\t\n\t\t\t// Is old Token Id set?\n\t\t\tif (oldTId) {\n\t\t\t\t// get Token\n\t\t\t\tconst token = canvas.tokens.ownedTokens.find(e => e.id === oldTId);\n\t\t\t\tif (token !== undefined) {\n\t\t\t\t\t// Get ids\n\t\t\t\t\tlet templates = duplicate(getProperty(token, \"data.flags.token-mold.sticky-templates.templateIds\") || []);\n\t\t\t\t\t// Find current template\n\t\t\t\t\tconst idx = templates.indexOf(templateId);\n\t\t\t\t\tif (idx > -1) {\n\t\t\t\t\t\t// Remove current Template\n\t\t\t\t\t\ttemplates.splice(idx, 1);\n\t\t\t\t\t\ttoken.update(parentId, {\"flags.token-mold.sticky-templates.templateIds\": templates});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\n\t\t\t// Is  new Token Id set to a token?\n\t\t\tif (newTId) {\n\t\t\t\t// Find Token\n\t\t\t\tconst token = canvas.tokens.ownedTokens.find(e => e.id === newTId);\n\t\t\t\tif (token !== undefined) {\n\t\t\t\t\tlet templates = duplicate(getProperty(token, \"data.flags.token-mold.sticky-templates.templateIds\") || []);\n\t\t\t\t\t// Add curent Template to list\n\t\t\t\t\ttemplates.push(templateId);\n\t\t\t\t\ttoken.update({\"flags.token-mold.sticky-templates.templateIds\": templates});\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t\n\t\t// Move sticked templates on Token update accordingly\n\t\tHooks.on('preUpdateToken', (scene, parentId, uData) => {\n\t\t\tconst token = canvas.tokens.get(uData._id);\n\t\t\tlet templateIds = duplicate(getProperty(token, \"data.flags.token-mold.sticky-templates.templateIds\") || []);\n\t\t\t// No templates? Leave\n\t\t\tif (templateIds.length === 0) return;\n\t\t\n\t\t\t// Get position and rotation delta\n\t\t\tconst x = token.data.x,\n\t\t\t\t\t\ty = token.data.y,\n\t\t\t\t\t\tnewX = uData.x || x,\n\t\t\t\t\t\tnewY = uData.y || y,\n\t\t\t\t\t\tdx = newX - x,\n\t\t\t\t\t\tdy = newY - y,\n\t\t\t\t\t\talpha = token.data.rotation,\n\t\t\t\t\t\tnewAlpha = getProperty(uData, \"rotation\");\n\t\t\t// Didnt move? leave\n\t\t\tif (dx === dy === 0 && newAlpha === undefined) return;\n\t\t\n\t\t\tconst dAlpha = newAlpha === undefined ? 0 : newAlpha - alpha;\n\n\t\t\t// Move each template by the same distance the token moved\n\t\t\ttemplateIds.forEach(async id => {\n\t\t\t\tconst template = canvas.scene.getEmbeddedEntity(\"MeasuredTemplate\", id);\n\t\t\t\t// template not found? skip\n\t\t\t\tif (!template)\n\t\t\t\t\treturn;\n\t\t\t\tlet data = {};\n\t\t\t\t// Rotate template around token if flag is set\n\t\t\t\tif (template.t !== \"rect\" && dAlpha !== 0 && getProperty(template, \"flags.token-mold.sticky-templates.rotate\") === true) {\n\t\t\t\t\t\n\t\t\t\t\tconst tokenCenter = token.center;\n\t\t\t\t\tlet x = template.x,\n\t\t\t\t\t\t\ty = template.y;\n\t\t\t\t\tif (template.t === \"rect\") {\n\t\t\t\t\t\tx += template.width / 2;\n\t\t\t\t\t\ty += template.height / 2;\n\t\t\t\t\t}\n\t\t\t\t\t// get vector from center to template\n\t\t\t\t\tconst dAlphaR = toRadians(dAlpha),\n\t\t\t\t\t\t\tdx = x - tokenCenter.x,\n\t\t\t\t\t\t\tdy = y - tokenCenter.y;\n\t\t\t\t\t// rotate vector around angle\n\t\t\t\t\tdata = {\n\t\t\t\t\t\tx: tokenCenter.x + Math.cos(dAlphaR)*dx - Math.sin(dAlphaR)*dy,\n\t\t\t\t\t\ty: tokenCenter.y + Math.sin(dAlphaR)*dx + Math.cos(dAlphaR)*dy,\n\t\t\t\t\t\tdirection: template.direction + (template.t === \"rect\" ? 0 : dAlpha)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdata = {\n\t\t\t\t\t\tx: template.x + dx,\n\t\t\t\t\t\ty: template.y + dy\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdata._id = id;\n\t\t\t\tawait canvas.scene.updateEmbeddedEntity(\"MeasuredTemplate\", data)\n\t\t\t});\n\t\t});\n\t\t\n\t\t// Remove template from tokens template list when delted\n\t\tHooks.on('preDeleteMeasuredTemplate',  (template, parentId, templateId) => {\n\t\t\tlet tokenId = getProperty(template, \"data.flags.token-mold.sticky-templates.tokenId\");\n\t\t\t// Return if there is no token or wrong scene\n\t\t\tif (tokenId === undefined || parentId !== canvas.scene.id) return;\t// Make sure the parent Scene is the active scene. Should be though..?\n\n\t\t\tlet token = canvas.tokens.get(tokenId);\n\t\t\tif (token === undefined) return;\n\n\t\t\tlet templates = duplicate(getProperty(token, \"data.flags.token-mold.sticky-templates.templateIds\") || []);\n\t\t\tconst idx = templates.indexOf(template.id);\n\t\t\tif (idx > -1) {\n\t\t\t\t// Remove template from tokens template list\n\t\t\t\ttemplates.splice(idx, 1);\n\t\t\t\ttoken.update(parentId, {\"flags.token-mold.sticky-templates.templateIds\": templates});\n\t\t\t}\t\n\t\t})\n\n\t\t// Remove token templates on token deletion\n\t\tHooks.on('preDeleteToken', (token, parentId, options) => {\n\t\t\tlet templateIds = getProperty(token, \"data.flags.token-mold.sticky-templates.templateIds\") || [];\n\t\t\tif (templateIds.length === 0) return;\n\n\t\t\tlet templates = templateIds.map(e => canvas.templates.placeables.find(t => t.id === e));\n\t\t\t// Error: the following results in not reliable deleting all templates\n\t\t\t// templates.forEach(async template => await template.delete(parentId))\t\n\n\t\t\ttemplates.forEach(async template => await template.update(parentId, {\"flags.token-mold.sticky-templates\": {}}))\n\t\t})\n\t\t\n\t\t// Remove templateList from token when copy pasting\n\t\t// TODO: Change this with 0.3.8 to copy templates as well?\n\t\tHooks.on('preCreateToken', (entity, parentId, data) => {\n\t\t\tlet templates = getProperty(data, \"flags.token-mold.sticky-templates.templateIds\");\n\t\t\n\t\t\tif (templates === undefined) return;\n\t\t\t\n\t\t\tsetProperty(data, \"flags.token-mold.sticky-templates.templateIds\", []);\n\t\t})\n\t})\n}","import { TokenMoldOverlay } from './overlay.js';\nimport { initStickyTemplates } from './sticky-templates.js';\n\nexport default class TokenMold {\n    constructor() {\n        this.counter = {};\n        this._rollTableList = {};\n        this.dict = null;\n        this.initHooks();\n    }\n\n    initHooks() {\n        Hooks.on('renderActorDirectory', (app,  html, data) => {\n            if (game.user.isGM)\n                this._hookActorDirectory(html);\n        });\n        initStickyTemplates();\n\n        this.registerSettings();\n        this.loadSettings();\n        this.systemSupported = /sw5e|pf2e/.exec(game.data.system.id) !== null;\n\n        Hooks.on('ready', async () => {\n            Hooks.on('renderHeadsUpDisplay', async (app, html, data) => {\n                html.append('<template id=\"token-mold-overlay\"></template>');\n                canvas.hud.TokenMold = new TokenMoldOverlay();\n            })\n\n            Hooks.on('hoverToken', async (token, hovered) => {\n                if (!token)\n                    return;\n                // Don't show for permission lvl lower than observer\n                if (token.actor.permission < CONST.ENTITY_PERMISSIONS.OBSERVER)\n                    return;\n\n                if (canvas.hud.TokenMold === undefined || this.data.overlay.attrs.length === 0)\n                    return;\n\n                if (hovered && this.data.overlay.use === true) {\n                    canvas.hud.TokenMold.attrs = this.data.overlay.attrs\n                    canvas.hud.TokenMold.bind(token);\n                } else {\n                    canvas.hud.TokenMold.clear();\n                }\n            });\n\n            if (!game.user.isGM)\n                return;\n\n            Hooks.on('deleteToken', (...args) => {\n                canvas.hud.TokenMold.clear();\n            })\n\n            this._hookPreTokenCreate();\n            this.barAttributes = await this._getBarAttributes();\n            this._loadDicts();\n\n            await this._getRolltables();\n\n            await this._loadTable();\n        });\n    }\n\n    get languages() {\n        return [\n            \"afrikaans\",\n            \"albanian\",\n            \"armenian\",\n            \"azeri\",\n            \"croatian\",\n            \"czech\",\n            \"danish\",\n            \"dutch\",\n            \"english\",\n            \"estonian\",\n            \"finnish\",\n            \"french\",\n            \"georgian\",\n            \"german\",\n            \"greek\",\n            \"hungarian\",\n            \"icelandic\",\n            \"indonesian\",\n            \"irish\",\n            \"italian\",\n            \"latvian\",\n            \"lithuanian\",\n            \"norwegian\",\n            \"polish\",\n            \"portuguese\",\n            \"romanian\",\n            \"russian\",\n            \"sicilian\",\n            \"slovak\",\n            \"slovenian\",\n            \"spanish\",\n            \"swedish\",\n            \"turkish\",\n            \"welsh\",\n            \"zulu\"\n        ];\n    }\n\n    /**\n     * Only loads dicts if the option is set *and* they're not already loaded\n     * possible TODO: maybe check if dict is needed?\n     */\n    async _loadDicts() {\n        // Remove if replace is unset\n        if (!game.user || !game.user.isGM || this.data.name.replace !== \"replace\") {\n            // Useful to free up memory? its \"just\" up to 17MB...\n            // delete this.dict;\n            return;\n        }\n        if (!this.dict)\n            this.dict = {}\n        const options = this.data.name.options\n        let languages = this.languages;\n        for (let lang of languages) {\n            if (this.dict[lang])\n                continue;\n            this.dict[lang] = (await import(\n                /* webpackChunkName: \"[request]\" */\n                `./dict/${lang}.json`\n            )).default;\n        }\n    }\n\n    async _loadTable() {\n        let entity;\n        try {\n            entity = await fromUuid(this.data.name.prefix.table);\n        } catch(error) {\n            // Reset if table not found..\n            entity = await fromUuid(this.defaultSettings().name.prefix.table);\n            this.data.name.prefix.table = this.defaultSettings().name.prefix.table;\n        }\n        \n        this.adjectives = entity;\n    }\n\n    // Gets a list of all Rollable Tables available to choose adjectives from.\n    async _getRolltables() {\n        const rollTablePacks = game.packs.filter(e => e.entity === \"RollTable\");\n\n        this._rollTableList = {};\n        if (game.tables.size > 0)\n            this._rollTableList[\"World\"] =  [];\n        for (const table of game.tables) {\n            this._rollTableList[\"World\"].push({\n                name: table.name,\n                uuid: `RollTable.${table.id}`\n            })\n        } \n        for (const pack of rollTablePacks) {\n            const idx = await pack.getIndex();\n            this._rollTableList[pack.metadata.label] = [];\n            const tableString = `Compendium.${pack.collection}.`;\n            for (let table of idx) {\n                this._rollTableList[pack.metadata.label].push({\n                    name: table.name,\n                    uuid: tableString + table._id\n                })\n            }\n        }\n\n        console.debug('Token Mold | Rollable Tables found', this._rollTableList);\n\n    }\n\n    async _hookActorDirectory(html) {\n        this.section = document.createElement('section')\n        this.section.classList.add('token-mold');\n        // Add menu before directory header\n        const dirHeader = html[0].querySelector('.directory-header');\n        dirHeader.parentNode.insertBefore(this.section, dirHeader);\n\n        if (this.data !== undefined)\n            this._renderActorDirectoryMenu();\n        \n    }\n\n    async _renderActorDirectoryMenu() {\n        const section = this.section;\n        section.insertAdjacentHTML('afterbegin',`\n        <h3>Token Mold</h3>\n        <label class='label-inp' title='(De-)activate Name randomizing'>\n            <input class='name rollable' type='checkbox' name='name.use' ${this.data.name.use ? 'checked' : ''}><span><span class='checkmark'></span>&nbsp;Name</span>\n        </label>\n        ${game.data.system.id === \"sw5e\" ? `\n        <label class='label-inp' title='(De-)activate Hit Point rolling'>\n            <input class='hp rollable' type='checkbox' name='hp.use' ${this.data.hp.use ? 'checked' : ''} ><span><span class='checkmark'></span>&nbsp;HP</span>\n        </label>` : ``}\n        <label class='label-inp' title='(De-)activate Token Config Overwrite'>\n            <input class='config rollable' type='checkbox' name='config.use' ${this.data.config.use ? 'checked' : ''}><span><span class='checkmark'></span>&nbsp;Config</span>\n        </label>\n        <label class='label-inp' title='(De-)activate Stat Overlay On Hover'>\n            <input class='config rollable' type='checkbox' name='overlay.use' ${this.data.overlay.use ? 'checked' : ''}><span><span class='checkmark'></span>&nbsp;Overlay</span>\n        </label>\n\n\n        <a class='refresh-selected' title=\"Reapplies all settings to selected tokens as if those were replaced onto the scene.\"><i class=\"fas fa-sync-alt\"></i></a>\n        <a class='token-rand-form-btn' title='Settings'><i class=\"fa fa-cog\"></i></a>\n        <h2></h2>\n        `)   \n\n        const inputs = section.querySelectorAll('input[type=\"checkbox\"]');\n        for (let checkbox of inputs) {\n            checkbox.addEventListener('change', (ev) => {\n                setProperty(this.data, ev.target.name, ev.target.checked)\n                this.saveSettings();\n            })\n        }\n\n        this.section.querySelector('.refresh-selected').addEventListener('click', (ev) => this._refreshSelected());\n        this.section.querySelector('.token-rand-form-btn').addEventListener('click', (ev) => {\n            if (this.form === undefined) this.form = new TokenMoldForm(this);\n            this.form.render(true);\n        });\n    }\n\n    /**\n     * Always update all checkboxes present. For two reasons:\n     *  - Other connected user  changes smth, so we have to update our view as well\n     *  - Popout sidebar needs to update on change as well\n     */\n    _updateCheckboxes() {\n        const inputs = document.querySelectorAll('section.token-mold input');\n        inputs.forEach(el => {\n            const name = el.name;\n            el.checked = getProperty(this.data, name);\n        });\n    }\n\n    _hookPreTokenCreate() {\n        Hooks.on('preCreateToken', (scene, data, options, userId) => {\n            this._setTokenData(scene, data);\n        })\n    }\n\n    /**\n     * \n     * @param {*} scene \n     * @param {*} data TokenData\n     */\n    _setTokenData(scene, data) {\n        const actor = game.actors.get(data.actorId);\n        // Do this for all tokens, even player created ones\n        if (this.data.size.use && this.systemSupported === true)\n            this._setCreatureSize(data, actor, scene.id);\n\n        if (!game.user.isGM || (data.actorLink && this.data.unlinkedOnly)) // Don't for linked token\n            return;\n        \n        if (this.counter[scene.id] === undefined)\n            this.counter[scene.id] = {};\n\n        if (this.data.name.use)\n            data.name = this._modifyName(data, actor, scene.id);\n\n        if (game.data.system.id === \"sw5e\") {\n            if (this.data.hp.use)\n                this._rollHP(data, actor);\n        }\n\n        if (this.data.config.use)\n            this._overwriteConfig(data, actor);\n\n        return data;\n    }\n\n\n    async _refreshSelected() {\n        const selected = canvas.tokens.controlledTokens;\n        let udata = [];\n        for (const token of selected) \n            udata.push(this._setTokenData(canvas.scene, duplicate(token.data)));\n        canvas.scene.updateEmbeddedEntity('Token', udata);\n    }\n\n    _overwriteConfig(data, actor) {\n        mergeObject(data, this.data.config.data);\n        for (let [key, value] of Object.entries(this.data.config)) {\n            if(value.use !== true)\n                continue;\n            if (value.value !== undefined) {\n                data[key] = value.value;\n            } else if(value.min !== undefined && value.max !== undefined) {\n                let val = data[key] || 1;\n                data[key] = val * Math.floor((Math.random() * (value.max - value.min) + value.min ) * 100) / 100;\n            } else if (value.attribute !== undefined && getProperty(actor, 'data.data.'+value.attribute) !== undefined) {\n                data[key].attribute = value.attribute;\n            } else { // Random mirroring\n                data[key] = Boolean(Math.round(Math.random()));\n            }\n        }\n    }\n\n    _rollHP(data, actor) {\n        const formula = actor.data.data.attributes.hp.formula;\n        if (formula) {\n            const r = new Roll(formula.replace(\" \", \"\"));\n            r.roll();\n            if (this.data.hp.toChat)\n                r.toMessage({\n                        rollMode: \"gmroll\",\n                        flavor: data.name + \" rolls for hp!\"\n                        });\n            // Make sure hp is at least 1\n            const val = Math.max(r.total, 1);\n            setProperty(data, \"actorData.data.attributes.hp.value\", val);\n            setProperty(data, \"actorData.data.attributes.hp.max\", val);\n        } else\n            ui.notifications.warn(\"Can not randomize hp. HP formula is not set.\");\n        return;\n    }\n    \n    _modifyName(data, actor, sceneId) {\n        let name = actor.data.token.name; \n\n        if (this.data.name.replace !== \"\" && this.data.name.replace !== \"nothing\") name = \"\";\n        \n        if (this.data.name.number.use) {\n            let number = 0;\n            // Check if number in session database\n            if (this.counter[sceneId][data.actorId] !== undefined) \n                number = this.counter[sceneId][data.actorId];\n            else { // Extract number from last created token with the same actor ID\n                const sameTokens = game.scenes.get(sceneId).data.tokens.filter(e => e.actorId === data.actorId) || [];\n                if (sameTokens.length !== 0) { \n                    const lastTokenName = sameTokens[sameTokens.length - 1].name;\n                    // Split by prefix and take last element\n                    let tmp = lastTokenName.split(this.data.name.number.prefix).pop();\n                    if (tmp !== \"\")\n                        // Split by suffix and take first element\n                        number = tmp.split(this.data.name.number.suffix)[0];\n                }\n            }\n            // Convert String back to number\n            switch(this.data.name.number.type) {\n                case \"ar\": number = parseInt(number); break;\n                case \"alu\": number = this._dealphabetize(number.toString(), \"upper\"); break;\n                case \"all\": number = this._dealphabetize(number.toString(), \"lower\"); break;\n                case \"ro\": number = this._deromanize(number); break;\n            }\n            // If result is no number, set to zero\n            if (isNaN(number))\n                number = 0;\n            else {// count upwards\n                if (this.data.name.number.range > 1)\n                    number += Math.ceil(Math.random() * this.data.name.number.range);\n                else\n                    number++;\n            }\n\n            switch(this.data.name.number.type) {\n                case \"alu\": number = this._alphabetize(number, \"upper\"); break;\n                case \"all\": number = this._alphabetize(number, \"lower\"); break;\n                case \"ro\": number = this._romanize(number); break;\n            }\n            \n            this.counter[sceneId][data.actorId] = number;\n\n            name += this.data.name.number.prefix + number + this.data.name.number.suffix;\n        }\n\n        if  (this.data.name.replace === \"replace\")\n            name = this._pickNewName(actor) + \" \" + name;\n\n        if (this.data.name.prefix.use)\n            name = this.adjectives.roll().results[0].text + \" \" + name;\n            // name = this.adjectives[Math.floor(Math.random() * this.adjectives.length)] + \" \" + name;\n\n        \n        return name;\n    }\n\n    _chooseWeighted(items) {\n        var keys = Object.keys(items);\n        var vals = Object.values(items);\n        var sum = vals.reduce((accum, elem) => accum + elem, 0);\n        var accum = 0;\n        vals = vals.map(elem => (accum = elem + accum));\n        var rand = Math.random() * sum;\n        return keys[vals.filter(elem => elem <= rand).length];\n    }\n\n    _chgCase(txt, fromCase, toCase) {\n        var res = \"\";\n        var c = \"\";\n        for (c of txt) {\n            let loc = fromCase.indexOf(c);\n            if (loc < 0) {res = res + c;}\n            else {res = res + toCase[loc];}\n        }\n        return res;\n    }\n    \n    /**\n     * Thanks for 'trdischat' for providing this awesome name generation algorithm!\n     * Base idea: \n     *  - Choose a language (depending on settings chosen)\n     *  - Choose a random starting trigram for the language, weighted by frequency used\n     *  - Go on choosing letters like before, using the previous found letter as starting letter of the trigram, until maximum is reached\n     * @param {*} actor \n     */\n    _pickNewName(actor) {\n        const attributes = this.data.name.options.attributes || []; \n        \n        let lang;\n        for (let attribute of attributes) {\n            const langs = attribute.languages;\n            const val = String(getProperty(actor.data, attribute.attribute)).toLowerCase();\n            \n            lang = langs[val];\n\n            if (lang !== undefined)\n                break;\n        }\n\n        if (lang === undefined)\n            lang = this.data.name.options.default;\n\n        if (lang === \"random\") {\n            const keys = Object.keys(this.dict);\n            lang = keys[Math.floor(Math.random()*keys.length)]\n        }\n\n        const minNameLen = (this.data.name.options.min || 6);\n        const maxNameLen = (this.data.name.options.max || 9);\n        \n        \n        const nameLength = (Math.floor(Math.random() * (maxNameLen - minNameLen + 1)) + minNameLen);\n        let newName = this._chooseWeighted(this.dict[lang].beg);\n        const ltrs = (x, y, b) => (x in b && y in b[x] && Object.keys(b[x][y]).length > 0) ? b[x][y] : false;\n\n        for (let i = 4; i <= nameLength ; i++) {\n            const c1 = newName.slice(-2, -1);\n            const c2 = newName.slice(-1);\n            const br = (i == nameLength) ? this.dict[lang].end : this.dict[lang].mid;\n            const c3 = ltrs(c1, c2, br) || ltrs(c1, c2, this.dict[lang].all) || {};\n            if (c1 == c2 && c1 in c3) delete c3[c1];\n            if (Object.keys(c3).length == 0) break;\n            newName = newName + this._chooseWeighted(c3);\n        }\n\n        newName = newName[0] + this._chgCase(newName.slice(1), this.dict[lang].upper, this.dict[lang].lower);\n        return newName;\n    }\n\n    _dealphabetize(num, letterStyle) {\n        if (num === \"0\")\n            return 0;\n        let ret = 0;\n        const startValue = {\n            upper: 64,\n            lower: 96,\n        }[letterStyle];\n\n        for (const char of num)\n            ret += char.charCodeAt(0) - startValue;\n\n        return ret;\n    }\n\n    _alphabetize(num, letterStyle) {\n        let ret = \"\";\n\n        const startValue = {\n            upper: 64,\n            lower: 96,\n        }[letterStyle];\n\n        while (num >= 26) {\n            ret += String.fromCharCode(startValue + 26);\n            num -= 26;\n        }\n\n        ret += String.fromCharCode(startValue + num);\n\n        return ret;\n    }\n\n    // Romanizes a number, code is from : http://blog.stevenlevithan.com/archives/javascript-roman-numeral-converter\n    _romanize (num) {\n    \tif (!+num)\n    \t\treturn false;\n    \tvar\tdigits = String(+num).split(\"\"),\n    \t\tkey = [\"\",\"C\",\"CC\",\"CCC\",\"CD\",\"D\",\"DC\",\"DCC\",\"DCCC\",\"CM\",\n    \t\t       \"\",\"X\",\"XX\",\"XXX\",\"XL\",\"L\",\"LX\",\"LXX\",\"LXXX\",\"XC\",\n    \t\t       \"\",\"I\",\"II\",\"III\",\"IV\",\"V\",\"VI\",\"VII\",\"VIII\",\"IX\"],\n    \t\troman = \"\",\n    \t\ti = 3;\n    \twhile (i--)\n    \t\troman = (key[+digits.pop() + (i * 10)] || \"\") + roman;\n    \treturn Array(+digits.join(\"\") + 1).join(\"M\") + roman;\n    }\n\n    // code is from : http://blog.stevenlevithan.com/archives/javascript-roman-numeral-converter\n    _deromanize(rom) {\n        if (typeof(rom) !== \"string\")\n            return 0;\n        let\tstr = rom.toUpperCase(),\n    \t\tvalidator = /^M*(?:D?C{0,3}|C[MD])(?:L?X{0,3}|X[CL])(?:V?I{0,3}|I[XV])$/,\n    \t\ttoken = /[MDLV]|C[MD]?|X[CL]?|I[XV]?/g,\n    \t\tkey = {M:1000,CM:900,D:500,CD:400,C:100,XC:90,L:50,XL:40,X:10,IX:9,V:5,IV:4,I:1},\n    \t\tnum = 0, m;\n    \tif (!(str && validator.test(str)))\n    \t\treturn false;\n    \twhile (m = token.exec(str))\n    \t\tnum += key[m[0]];\n    \treturn num;\n    }\n\n    // Scale tokens according to set creature size\n    // DnD 5e and PF2e only\n    _setCreatureSize(data, actor, sceneId) {\n        const sizes = {\n            tiny: 0.5,\n            sm: 0.8,\n            med: 1,\n            lg: 2,\n            huge: 3,\n            grg: 4\n        }\n        const aSize = actor.data.data.traits.size;\n        let tSize = sizes[aSize];\n\n        // if size could not be found return \n        if (tSize === undefined) return;\n\n        const scene = game.scenes.get(sceneId);\n\n        // If scene has feet/ft as unit, scale accordingly\n        //  5 ft => normal size\n        // 10 ft => double\n        // etc.\n        if (/(ft)|eet/.exec(scene.data.gridUnits) !== null)\n            tSize *= 5 / scene.data.gridDistance;\n\n        if (tSize < 1) {\n            data.scale = tSize;\n            data.width = data.height = 1;\n        } else {\n            const int =  Math.floor(tSize);\n            \n            // Make sure to only have integers\n            data.width = data.height = int;\n            // And scale accordingly\n            data.scale = tSize / int;\n            // Set minimum scale 0.25\n            data.scale = Math.max(data.scale, 0.25); \n        }\n    }\n\n    registerSettings() {\n        // register settings\n       game.settings.register(\"Token-Mold\", 'everyone', {\n           name: \"Token Mold Settings\",\n           hint: \"Settings definitions for the Token Mold Module\",\n           default: this.defaultSettings(),\n           type: Object,\n           scope: 'world',\n           onChange: data => {\n               this.data = data;\n               this._updateCheckboxes();\n           }\n       });\n   }\n\n   defaultSettings() {\n        console.log('Token Mold | Loading default Settings');\n        return {\n            unlinkedOnly: true,\n            name: {\n                use: true,\n                number: {\n                    use: true,\n                    prefix: \" (\",\n                    suffix: \")\",\n                    type: \"ar\"\n                },\n                remove: false,\n                prefix: {\n                    use: true,\n                    table: 'Compendium.token-mold.adjectives.H0BSHD6uCDodIT5x' // English\n                },\n                replace: \"\",\n                options: {\n                    default: \"random\",\n                    attributes: [\n                        {\n                            attribute: \"\",\n                            languages: {\n                                \"\": \"random\"\n                            }\n                        }\n                    ],\n                    min: 3,\n                    max: 9\n                }\n            },\n            hp: {\n                use: true,\n                toChat: true\n            },\n            size: {\n                use: true\n            },\n            config: {\n                use: false,\n                // data: {\n                //     vision: false,\n                //     displayBars: 40,\n                //     displayName: 40,\n                //     disposition: 0\n                // },\n                vision: {\n                    use: false,\n                    value: true\n                },\n                displayBars: {\n                    use: false,\n                    value: 40\n                },\n                bar1: {\n                    use: false\n                },\n                bar2: {\n                    use: false\n                },\n                displayName: {\n                    use:  false,\n                    value: 40\n                },\n                disposition: {\n                    use: false,\n                    value: 0\n                },\n                rotation: {\n                    use: false,\n                    min: 0,\n                    max: 360\n                },\n                scale: {\n                    use: false,\n                    min: 0.8,\n                    max: 1.2\n                }\n            },\n            overlay: {\n                use: true,\n                attrs: TokenMoldForm.defaultAttrs\n            }\n        }\n   }\n\n   loadSettings() {\n        this.data = game.settings.get(\"Token-Mold\", 'everyone');\n        // Check for old data\n        if (this.data.config.data !== undefined) {\n            for (let [key, value] of Object.entries(this.data.config.data)) {\n                this.data.config[key] = {\n                    use: true,\n                    value: value\n                };\n            }\n            delete this.data.config.data;\n            this.saveSettings();\n        }\n        if (getProperty(this.data, \"overlay.attrs\") && this.data.overlay.attrs.length === 0)\n            delete this.data.overlay.attrs;\n        if (getProperty(this.data, \"name.options.attributes\") && this.data.name.options.attributes.length === 0)\n            delete this.data.name.options.attributes;\n        this.data = mergeObject(this.defaultSettings(), this.data);\n        if (game.data.system.id === \"sw5e\") {\n            if (this.data.name.options === undefined) {\n                const dndOptions = this.dndDefaultNameOptions;\n                this.data.name.options.default = dndOptions.default;\n                this.data.name.options.attributes = dndOptions.attributes;\n            }\n        }\n        this._loadDicts();\n        console.log(\"Token Mold | Loading Settings\", this.data);\n   }\n\n   get dndDefaultNameOptions() {\n       return {\n            default: \"random\",\n            attributes: [\n                // Various named monsters\n                {\n                    attribute: \"name\",\n                    languages: {\n                        \"orc\": \"turkish\",\n                        \"goblin\": \"indonesian\",\n                        \"kobold\": \"norwegian\"\n                    }\n                },\n                // Uncomment this section if races get implemented in FVTT\n                // {\n                //     attribute: \"data.details.race\",\n                //     languages: {\n                //         \"dragonborn\": \"norwegian\",\n                //         \"dwarf\": \"welsh\",\n                //         \"elf\": \"irish\",\n                //         \"halfling\": \"english\",\n                //         \"half-elf\": \"finnish\",\n                //         \"half-orc\": \"turkish\",\n                //         \"human\": \"english\",\n                //         \"gnome\": \"dutch\",\n                //         \"tiefling\": \"spanish\",\n                //     }\n                // },\n                // NPC Types\n                {\n                    attribute: \"data.details.type\",\n                    languages: {\n                        \"humanoid\": \"irish\",\n                        \"aberration\": \"icelandic\",\n                        \"beast\": \"danish\",\n                        \"celestial\": \"albanian\",\n                        \"construct\": \"azeri\",\n                        \"dragon\": \"latvian\",\n                        \"elemental\": \"swedish\",\n                        \"fey\": \"romanian\",\n                        \"fiend\": \"sicilian\",\n                        \"giant\": \"german\",\n                        \"monstrosity\": \"slovenian\",\n                        \"ooze\": \"welsh\",\n                        \"plant\": \"zulu\",\n                        \"undead\": \"french\"\n                    }\n                }\n            ]\n    }\n    }\n\n   async saveSettings() {\n       if (this.adjectives.uuid !== this.data.name.prefix.table)\n        this._loadTable();\n        \n       await game.settings.set('Token-Mold', 'everyone', this.data);\n       this._loadDicts();\n       console.log(\"Token Mold | Saving Settings\", this.data);\n   }\n\n\n   async _getBarAttributes() {\n        let barAttributes = {};\n        const model = game.system.model.Actor;\n        for (const type in model) {\n            const data = model[type];\n            const attributes = TokenConfig.getTrackedAttributes(data);\n            const newAttributes = TokenConfig.getTrackedAttributeChoices(attributes);\n\n            // find duplicates and map attributes to string\n            for (const key of Object.keys(newAttributes)) {\n                if (!barAttributes[key])\n                    barAttributes[key] = [];\n                for (const attr of newAttributes[key]) {\n                     // Search if attribute already found\n                    const duplicate = barAttributes[key].find(el => el.attribute.includes(attr));\n                    // If not found,  add to attributes\n                    if (duplicate === undefined) {\n                        barAttributes[key].push({\n                            entity: type,\n                            attribute: attr\n                        });\n                    } else {\n                        // if found add actor type to list\n                        duplicate.entity += ', ' + type;\n                    }\n                }\n            }\n        }\n        return barAttributes;\n    }\n}\n\nclass TokenMoldForm extends FormApplication {\n    constructor(object, options) {\n        super(object, options);\n        this.data = object.data;\n        this.barAttributes = object.barAttributes || [];\n    }\n\n    static get defaultOptions() {\n        const options = super.defaultOptions;\n        options.template = \"modules/token-mold/templates/token-mold.html\";\n        options.width = 420;\n        options.height = 461;\n        options.resizable = true;\n        options.classes = [\"token-mold\"];\n        options.title = \"Token Mold\";\n        options.closeOnSubmit = false;\n        options.submitOnClose = true;\n        options.submitOnChange = true;\n        options.tabs = [ {\n            navSelector: '.tabs',\n            contentSelector: 'form',\n            initial: 'name'\n        } ];\n        return options;\n    }\n\n    _getHeaderButtons() {\n        let btns = super._getHeaderButtons();\n        btns[0].label = \"Save & Close\";\n        return btns;\n      }\n    \n\n    async _onSubmit(ev) {\n        const attrGroups = $(this.form).find('.attributes');\n        let attrs = [];\n        attrGroups.each((idx, e) => {\n            const el = $(e);\n            const icon = el.find('.icon').val(),\n                    value = el.find('.value').val();\n            if (icon !== \"\" && value !== \"\")\n                attrs.push( {\n                    icon: icon,\n                    path: value\n                });\n        })\n        this.data.overlay.attrs = attrs;\n\n        this.data.name.options.default = this.form.querySelector('.default-group').querySelector('.language').value;\n        const attributes = []\n\n        const langAttrGroups = this.form.querySelectorAll('.attribute-selection');\n        \n        langAttrGroups.forEach(el => {\n            let ret = {languages: {}};\n            ret.attribute = el.querySelector('.attribute').value;\n            el.querySelectorAll('.language-group').forEach(langGroup => {\n                ret.languages[langGroup.querySelector('.value').value.toLowerCase()] = langGroup.querySelector('.language').value;\n            })\n            attributes.push(ret);\n        });\n\n        this.data.name.options.attributes = attributes;\n        super._onSubmit(ev);\n    }\n\n    async _updateObject(event, formData) {\n        let min = formData[\"name.options.min\"],\n            max = formData[\"name.options.max\"];\n        if (min < 0)\n            min = 0;\n        if (max < 0)\n            max = 0;\n\n        if (min > max) {\n            const tmp = min;\n            min = max,\n            max = tmp;\n        }\n\n        formData[\"name.options.min\"] = min;\n        formData[\"name.options.max\"] = max;\n\n\n        this.object.data = mergeObject(this.data, formData);\n        if (this._resetOptions === true) {\n            // this.object.data.name.options = this.object.dndDefaultNameOptions;\n\n            const dndOptions = this.object.dndDefaultNameOptions;\n            this.object.data.name.options.default = dndOptions.default;\n            this.object.data.name.options.attributes = dndOptions.attributes;\n            this._resetOptions = false;\n\n            this.render()\n        }\n        this.object.saveSettings();\n    }\n\n    getData() {\n        let data = {\n            data: this.data\n        };\n        data.numberStyles = {\n            ar: \"arabic numerals\",\n            alu: \"alphabetic UPPER\",\n            all: \"alphabetic LOWER\",\n            ro: \"roman numerals\"\n        };\n        data.barAttributes = this.barAttributes;\n        data.actorAttributes = this._actorAttributes;\n        data.displayModes = CONST.TOKEN_DISPLAY_MODES;\n        data.dispositions = CONST.TOKEN_DISPOSITIONS;\n        data.defaultIcons = this.defaultIcons;\n        data.showHP = game.data.system.id === \"sw5e\";\n        data.showSystem = this.object.systemSupported;\n        data.languages = this.languages;\n        data.rollTableList = this.object._rollTableList;\n        console.debug('Token Mold | Prepared data', data, this._rollTableList);\n        return data;\n    }\n\n    static get defaultAttrs() {\n        if (game.data.system.id === \"sw5e\") {\n            return [\n                {\n                    value: \"data.attributes.ac.value\",\n                    label: \"Armor Class\",\n                    icon: '<i class=\"fas fa-eye\"></i>'\n                },\n                {\n                    value: \"data.skills.prc.passive\",\n                    label: \"Passive Perception\",\n                    icon: '<i class=\"fas fa-shield-alt\"></i>'\n                }\n            ];\n        } else\n            return [\n                {\n                    icon: '<i class=\"fas fa-eye\"></i>',\n                    value: \"\"\n                }\n            ];\n    }\n\n    get defaultIcons() {\n        return [\n            '&#xf06e;', // eye\n            '&#xf3ed; ', //fas fa-shield-alt\"></i>',\n            '&#xf6cf; ', //fas fa-dice-d20\"></i>',\n            '&#xf21e; ', //fas fa-heartbeat\"></i>',\n            '&#xf6e8; ', //fas fa-hat-wizard\"></i>',\n            '&#xf54b; ', //fas fa-shoe-prints\"></i>',\n            '&#xf554; ', //fas fa-walking\"></i>',\n            '&#xf70c; ', //fas fa-running\"></i>',\n            '&#xf51e; ', //fas fa-coins\"></i>',\n            '&#xf619; ', //fas fa-poop\"></i>',\n            '&#xf290; ', //fas fa-shopping-bag\"></i>',\n            '&#xf53a;', //fas fa-money-bill-wave\"></i>',\n            '&#xf0f2;', // fas fa-suitcase\"></i>',\n            '&#xf06d;', //fas fa-fire\"></i>',\n            '&#xf1b0;', //fas fa-paw\"></i>',\n            '&#xf787;', //fas fa-carrot\"></i>',\n            '&#xf5d7;', //fas fa-bone\"></i>',\n            '&#xf6d7;', //fas fa-drumstick-bite\"></i>',\n            '&#xf5d1;', //fas fa-apple-alt\"></i>',\n            '&#xf6de;', //fas fa-fist-raised\"></i>',\n            '&#xf669;', //fas fa-jedi\"></i>',\n            '&#xf753;', //fas fa-meteor\"></i>',\n            '&#xf186;', //fas fa-moon\"></i>',\n            '&#xf135;', //fas fa-rocket\"></i>'\n            '&#xf5dc;', // brain\n            '&#xf1ae;', // child\n        ];\n    }\n\n    get languages() {\n        return this.object.languages;\n    }\n\n    activateListeners(html) {\n        super.activateListeners(html);\n\n        html.find('.add-attribute').on('click', ev => {\n            const addBtn = $(ev.target);\n            const clone = addBtn.prev().clone();\n            clone.find('select').val(\"\");\n            addBtn.before(clone);\n        });\n\n        html.on('click', '.remove', ev => {\n            const container = $(ev.currentTarget).closest('.form-group');\n            \n            if (container.prev('.form-group:not(\".header\")').length > 0 || container.next('.form-group').length > 0)\n                container.remove();\n        })\n\n        html.find('.overlay').on('change keyup', 'input.icon', ev => {\n            ev.target.parentNode.parentNode.getElementsByClassName('prev')[0].innerHTML = '17&nbsp;' + ev.target.value;\n        })\n\n        html.find('.name-replace').on('change', ev => {\n            const nameRandomizer = ev.currentTarget.parentNode.parentNode.querySelector('.name-randomizer-options');\n            if (ev.currentTarget.value === \"replace\")\n                nameRandomizer.style.display = 'block';\n            else\n                nameRandomizer.style.display = 'none';\n        });\n        html.find('.name-replace').change();\n\n        html.on('click', '.add-language-value', ev => {\n            const addBtn = $(ev.target);\n            const clone = addBtn.prev().clone();\n            clone.find('input').val(\"\");\n            clone.find('select').val(\"random\");\n            addBtn.before(clone);\n        });\n\n        html.on('click', '.add-language-attribute', ev => {\n            const addBtn = $(ev.target);\n            const clone = addBtn.prev().clone();\n            clone.children('.attribute').val(\"\");\n            clone.children('.language-selection').children('.language-group').each((idx, el) => {\n                if (idx > 0)\n                    el.remove();\n            })\n            const langSelection = clone.children('.language-selection');\n            langSelection.find('input').val(\"\");\n            langSelection.find('select').val(\"random\");\n            addBtn.before(clone);\n        });\n\n        html.on('click', '.lang-remove', ev => {\n            const container = $(ev.currentTarget).closest('.form-group');\n\n            let prev = container.prev('.form-group');\n            // only delete if not last element\n            if (prev.length > 0 || container.next('.form-group').length > 0)\n                container.remove();\n            else {\n                // alternatively delete whole attribute\n                const parentContainer = container.closest('.attribute-group');\n                if (parentContainer.prev('.attribute-group:not(\".default\")').length > 0 || parentContainer.next('.attribute-group:not(\".default\")').length > 0) {\n                    parentContainer.remove();\n                }\n                    \n            }\n        });\n\n        if (game.system.id === 'sw5e') {\n            const resetBtn = html.find('.reset');\n            resetBtn[0].innerHTML = '<i class=\"fas fa-undo\"></i>';\n            let resetLangs = (ev) => {}\n            resetBtn.on('click', ev => {\n                this._resetOptions = true;         \n                this._onSubmit(ev);\n            });\n        }\n\n        html[0].querySelector('.reroll-names').addEventListener('click', ev => {\n            const tokens = canvas.tokens.controlledTokens;\n            let udata = [];\n            for (let token of tokens) {\n                udata.push({\n                    _id: token.id,\n                    name: this.object._pickNewName(token.actor.data)\n                })\n            }\n\n            canvas.scene.updateManyEmbeddedEntities('Token', udata);\n        });\n\n        html.on('click', '.reset-counter', async (ev) => {\n            const sceneId  = canvas.scene.id;\n\n            this.object.counter[sceneId] = {};\n            const tokens = canvas.scene.getEmbeddedCollection('Token');\n            \n            for (const token of tokens)\n                if (token.actorId)\n                    this.object.counter[sceneId][token.actorId] = 0;\n\n            ui.notifications.notify('Finished resetting counters');\n        });\n    }\n\n    get _actorAttributes() {\n        let getAttributes = function (data, parent) {\n            parent = parent || [];\n            let valid = [];\n            for ( let [k, v] of Object.entries(data) ) {\n                let p = parent.concat([k]);\n                if ( v instanceof Object ) {\n                    valid = valid.concat(getAttributes(data[k], p));\n                } else {\n                    valid.push(p);\n                }\n            }\n            return valid;\n        }\n        \n        let barAttributes = []\n        for (let type in game.system.model.Actor) {\n            let newAttributes = getAttributes(game.system.model.Actor[type]).map(e => e.join(\".\"));\n            // find duplicates\n            for (let attr of newAttributes) {\n                // Search if attribute already found\n                let duplicate = barAttributes.find(el => el[1].includes(attr));\n                // If not found,  add to attributes\n                if (duplicate === undefined) {\n                    barAttributes.push([type].concat(attr));\n                } else {\n                    // if found add actor type to list\n                    duplicate[0] += ', ' + type;\n                }\n            }\n        }\n        // Sort in groups by first element\n        let groups = {};\n        for (var attr of barAttributes) {\n            const split = attr[1].split('.');\n            const entity = attr[0];\n            const group = split[0];\n            if (groups[group] === undefined)\n                groups[group] = [];\n            groups[group].push({\n                entity: entity,\n                attribute: split.splice(1).join('.')\n            });\n        }\n        // also populate with some calculated data for sw5e, that is not in the template.json\n        if (game.data.system.id === \"sw5e\") {\n            let sortFun = function(a,b) {\n                if (a.attribute > b.attribute)\n                    return 1\n                else if (a.attribute < b.attribute)\n                    return -1\n                return 0;\n            }\n            for (let skill of Object.keys(game.system.model.Actor[\"npc\"].skills)) {\n                groups[\"skills\"].push({\n                    entity: \"character, npc\",\n                    attribute: `${skill}.passive`\n                });\n            };\n            groups[\"skills\"].sort(sortFun);\n            groups[\"attributes\"].push({\n                entity: \"character, npc\",\n                attribute: \"ac.value\"\n            });\n            groups[\"attributes\"].sort(sortFun);\n        }\n        return groups;\n    }\n}"],"sourceRoot":""}